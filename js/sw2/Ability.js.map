{"version":3,"sources":["sw2/Ability.jsx"],"names":[],"mappings":"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","file":"sw2/Ability.js","sourcesContent":["'use strict';\r\n\r\nvar Ability = React.createClass({\r\n    render: function () {\r\n        var data = this.props.data;\r\n\r\n        var radius = this.props.radius || 120;\r\n        var margin = radius / 5 * 2;\r\n        var size = radius + margin;\r\n\r\n        var points = [];\r\n        for (var i = 0; i < 6; ++i) {\r\n            var r1 = Math.PI * 2 / 6 * (i - 0.5);\r\n            points.push([Math.sin(r1), -Math.cos(r1)]);\r\n        }\r\n\r\n        var pmul = function (a) {\r\n            return function (p) {\r\n                return p.map(function (b) {\r\n                    return b * a;\r\n                });\r\n            };\r\n        };\r\n        \r\n        var abilities = [];\r\n        var sumlist = {\r\n            base: [],\r\n            ability: [],\r\n            growth: [],\r\n            sum: []\r\n        };\r\n        if (data.abilities) {\r\n            for (var i = 0; i < 6; ++i) {\r\n                var base = +data[['skill', 'body', 'mind'][Math.floor(i / 2)]];\r\n\r\n                var ability = +data.abilities[i];\r\n                var growth = +data.growths[i];\r\n\r\n                // ToDo corrects\r\n                var correct = 0;\r\n                var sum = base + ability + growth;\r\n                var bonus = Math.floor(sum / 6);\r\n\r\n                sumlist.base.push(base);\r\n                sumlist.ability.push(base + ability);\r\n                sumlist.growth.push(base + ability + growth);\r\n                sumlist.sum.push(sum);\r\n\r\n                abilities.push([base, ability, growth, correct].join(',') + '\\n'  + sum + ' (+' + bonus + ')');\r\n            }\r\n        }\r\n\r\n        var rader = function (sum, n) {\r\n            var r = sum / 30 * radius;\r\n            return points[n].map(function (p) {\r\n                return p * r;\r\n            });\r\n        };\r\n\r\n        return (\r\n                <svg className=\"rader\" width={size * 2} height={size * 2}>\r\n                    <g style={{transform: 'translate(' + size + 'px, ' + size + 'px)'}}>\r\n                        <g className=\"rader\">\r\n                            <polygon points={sumlist.sum.map(rader)}/>\r\n                            <polygon points={sumlist.growth.map(rader)}/>\r\n                            <polygon points={sumlist.ability.map(rader)}/>\r\n                            <polygon points={sumlist.base.map(rader)}/>\r\n                        </g>\r\n                        <g className=\"grid\">\r\n                            {points.map(\r\n                                    function (p) {\r\n                                        return (\r\n                                                <line x1=\"0\" y1=\"0\" x2={p[0] * radius} y2={p[1] * radius} />\r\n                                               );\r\n                                    })\r\n                            }\r\n                            <polygon points={points.map(pmul(radius))}/>\r\n                            <polygon points={points.map(pmul(radius * 4 / 5))}/>\r\n                            <polygon points={points.map(pmul(radius * 3 / 5))}/>\r\n                            <polygon points={points.map(pmul(radius * 2 / 5))}/>\r\n                            <polygon points={points.map(pmul(radius / 5))}/>\r\n                        </g>\r\n                        <g className=\"label\">\r\n                            {points.map(\r\n                                    function (p, n) {\r\n                                        var x = p[0] * (radius + margin / 2);\r\n                                        var y = p[1] * (radius + margin / 2);\r\n\r\n                                        var label = ['器用度', '敏捷度', '筋力', '生命力', '知力', '精神力'][n];\r\n\r\n                                        if (abilities[n]) {\r\n                                            label += '\\n' + abilities[n];\r\n                                        }\r\n\r\n                                        var text = label.split('\\n').map(\r\n                                                function (line, n) {\r\n                                                    return (<text x={x} y={y + n * 15 - 7.5}>{line}</text>);\r\n                                                });\r\n\r\n                                        return text;\r\n                                    }.bind(this))\r\n                            }\r\n                            {'技体心'.split('')\r\n                                .map(function (label, n) {\r\n                                    var p1 = points[n * 2];\r\n                                    var p2 = points[n * 2 + 1];\r\n                                    var r = radius + margin / 3 * 2;\r\n                                    var x = (p1[0] + p2[0]) / 2 * r;\r\n                                    var y = (p1[1] + p2[1]) / 2 * r;\r\n                                    return (<text className=\"l\" x={x} y={y}>{label}</text>);\r\n                                })\r\n                            }\r\n                        </g>\r\n                    </g>\r\n                </svg>\r\n               );\r\n    }\r\n});\r\n\r\nmodule.exports = Ability;\r\n"],"sourceRoot":"/source/"}